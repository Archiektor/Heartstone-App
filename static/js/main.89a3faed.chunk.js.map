{"version":3,"sources":["components/header/index.js","components/header/header.js","components/app/MyContext.js","components/list/index.js","components/list/list.js","components/list-item/index.js","components/list-item/list-item.js","services/hsapi.js","components/app/index.js","components/app/app.js","index.js"],"names":["Header","props","sendParametrs","isBtnClicked","isDivClicked","actualClassName","defaultClassName","className","to","onClick","e","stopPropagation","onBtnClicked","MyContext","React","createContext","List","withRouter","contentToShow","request","showedType","useState","data","isLoading","isError","state","setState","uniqueId","parseInt","Math","ceil","random","sqrt","apiClient","useContext","receivedData","useCallback","searchByInfo","type","useEffect","then","res","catch","err","abortController","abort","map","item","label","renderItem","liKey","key","history","push","target","textContent","ListItem","setData","searchByClass","itemId","slice","console","log","cards","dbfId","health","img","name","text","configHealth","src","alt","HSApi","AbortController","_apiBase","url","fetch","signal","this","result","ok","Error","status","json","getResourse","receivedClass","App","hsApiClient","isParentClicked","options","setOptions","Provider","value","exact","path","render","id","match","params","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.89a3faed.chunk.js","sourcesContent":["import Header from './header';\r\n\r\nexport default Header;","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport './header.css';\r\n\r\nconst Header = (props) => {\r\n\r\n    const {isBtnClicked, isDivClicked} = props.sendParametrs;\r\n\r\n    const defaultClassName = \"dropdown__content\";\r\n    const actualClassName = isBtnClicked && !isDivClicked ? defaultClassName + '_activated' : defaultClassName;\r\n\r\n    const onBtnClick = (e) => {\r\n        e.stopPropagation();\r\n        props.onBtnClicked();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light flex-block\">\r\n                <Link to=\"/\" className=\"navbar-brand\">Heartstone App</Link>\r\n                <div className=\"dropdown\">\r\n                    <button onClick={onBtnClick} className=\"dropdown__dropbtn\">Filter by</button>\r\n                    <div className={actualClassName}>\r\n                        <Link to=\"/classes\" className=\"dropdown__link\">Get classes</Link>\r\n                        <Link to=\"/qualities\" className=\"dropdown__link\">Get qulities</Link>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\n\r\nconst MyContext = React.createContext();\r\n\r\nexport default MyContext;","import List from './list';\r\n\r\nexport default List;","import React, {useState, useEffect, useCallback} from \"react\";\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nimport MyContext from \"../app/MyContext\";\r\n\r\nimport './list.css';\r\n\r\nconst List = (props) => {\r\n\r\n    // console.log(props);\r\n\r\n    const [state, setState] = useState({\r\n        data: null,\r\n        isLoading: false,\r\n        isError: null\r\n    });\r\n\r\n    let uniqueId = parseInt(Math.ceil(Math.random() * 10) + Math.ceil(Math.random() * 10) + Math.ceil(Math.random() * 10) * Math.ceil(Math.sqrt(Math.random() * 10)));\r\n\r\n    const apiClient = React.useContext(MyContext);\r\n    let contentToShow;\r\n    const loadingMsg = 'Loading...';\r\n\r\n    const renderElements = (arr) => {\r\n        return arr.map((item) => {\r\n            const label = props.renderItem(item);\r\n            let liKey = uniqueId++;\r\n            return (\r\n                <li key={liKey} onClick={(e) => props.history.push(`/${props.type}/${e.target.textContent}`)} className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                    {label}\r\n                </li>\r\n            )\r\n        });\r\n    }\r\n\r\n    const useRequest = (request, showedType) => {\r\n        useEffect(() => {\r\n            setState({\r\n                data: null,\r\n                isLoading: true,\r\n                isError: null\r\n            })\r\n            request()\r\n                .then(res => {\r\n                    setState({\r\n                        data: res[showedType], isLoading: false, isError: null\r\n                    })\r\n                })\r\n                .catch(err => {\r\n                    setState({\r\n                        data: null, isLoading: false, isError: err\r\n                    })\r\n                });\r\n            return () => apiClient.abortController.abort();\r\n        }, [request, showedType])\r\n\r\n        return state;\r\n    }\r\n\r\n    const useInfo = () => {\r\n        const request = useCallback(() => apiClient.searchByInfo(), [])\r\n        return useRequest(request, props.type);\r\n    }\r\n\r\n    const receivedData = useInfo();\r\n    contentToShow = !state.data ? loadingMsg : renderElements(receivedData.data)\r\n\r\n    return (\r\n        <div>\r\n            <ul className=\"list-group\">\r\n                {contentToShow}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(List);","import ListItem from './list-item';\r\n\r\nexport default ListItem;","import React, {useState, useEffect, useCallback, useContext} from \"react\";\r\n\r\n\r\nimport './list-item.css';\r\nimport MyContext from \"../app/MyContext\";\r\n\r\nconst ListItem = (props) => {\r\n    const apiClient = useContext(MyContext);\r\n\r\n    const [data, setData] = useState(null);\r\n\r\n    const renderCardsByClass = (arr) => {\r\n        return arr.map(item => {\r\n            const {dbfId, health, img, name, text} = item;\r\n            const configHealth = !health ? `-` : health\r\n\r\n            return (\r\n                <div key={dbfId} className=\"card mb-3\">\r\n                    <h3 className=\"card-header\">{name}</h3>\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">{`Health: ${configHealth}`}</h5>\r\n                    </div>\r\n                    <img className=\"imgStyle\"\r\n                         src={img} alt='Card-name'/>\r\n                    <div className=\"card-body\">\r\n                        <p className=\"card-text\">{text}</p>\r\n                    </div>\r\n                </div>\r\n            )\r\n\r\n        })\r\n    }\r\n\r\n    const useRequest = (request) => {\r\n        useEffect(() => {\r\n            request()\r\n                .then((res) => setData(res.slice(50, 75)))\r\n                .catch(err => console.log(err));\r\n            return () => apiClient.abortController.abort();\r\n        }, [request])\r\n\r\n        return data;\r\n    }\r\n\r\n    const useInfo = () => {\r\n        const request = useCallback(() => apiClient.searchByClass(`${props.itemId}`), []);\r\n        return useRequest(request);\r\n    }\r\n\r\n    const receivedData = useInfo();\r\n    const cards = !data ? <p>Loading...</p> : renderCardsByClass(receivedData);\r\n\r\n\r\n    return (\r\n        <div>\r\n            {cards}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListItem;","export default class HSApi {\r\n\r\n    abortController = new AbortController();\r\n    _apiBase = `https://omgvamp-hearthstone-v1.p.rapidapi.com`;\r\n\r\n    async getResourse(url) {\r\n        const result = await fetch(`${url}`, {\r\n            signal: this.abortController.signal,\r\n            \"method\": \"GET\",\r\n            \"headers\": {\r\n                \"x-rapidapi-host\": \"omgvamp-hearthstone-v1.p.rapidapi.com\",\r\n                \"x-rapidapi-key\": \"5d1870c559mshefa1a226c455eb0p139f5cjsn85229168a97b\"\r\n            }\r\n        });\r\n        if (!result.ok) {\r\n            throw new Error(`Cannot connect ${url}, received ${result.status}`);\r\n        }\r\n        return await result.json();\r\n    }\r\n\r\n    async searchByInfo() {\r\n        return await this.getResourse(`${this._apiBase}/info`);\r\n    }\r\n\r\n    async searchByClass(receivedClass){\r\n        return await this.getResourse(`${this._apiBase}/cards/classes/${receivedClass}`)\r\n    }\r\n\r\n}\r\n","import App from \"./app\";\r\n\r\nexport default App;","import React, {useState} from \"react\";\r\nimport {BrowserRouter as Router, Route} from \"react-router-dom\";\r\n\r\nimport Header from \"../header\";\r\nimport List from \"../list\";\r\nimport ListItem from \"../list-item\";\r\nimport MyContext from \"./MyContext\";\r\n\r\nimport './app.css';\r\nimport HSApi from \"../../services/hsapi\";\r\n\r\nconst App = () => {\r\n    const hsApiClient = new HSApi();\r\n    const [options, setOptions] = useState({\r\n        isParentClicked: false,\r\n        isBtnClicked: false\r\n    })\r\n\r\n    const onDivClicked = () => {\r\n        setOptions(() => {\r\n            return {\r\n                isParentClicked: true,\r\n                isBtnClicked: false\r\n            }\r\n        })\r\n    }\r\n\r\n    const onBtnClicked = () => {\r\n        setOptions(() => {\r\n            return {\r\n                isBtnClicked: true,\r\n                isParentClicked: false\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <MyContext.Provider value={hsApiClient}>\r\n            <Router>\r\n                <div className=\"container\" onClick={onDivClicked}>\r\n                    <Header sendParametrs={options} onBtnClicked={onBtnClicked}/>\r\n                    <Route exact={true} path=\"/\" render={() => <h2>Welcome to Hearstone App</h2>}/>\r\n                    <Route exact={true} path=\"/classes\" render={() => <List renderItem={(item) => item} type=\"classes\"/>}/>\r\n                    <Route path=\"/classes/:id\" render={({match}) => {\r\n                        const {id} = match.params;\r\n                        return <ListItem itemId={id}/>\r\n                    }}/>\r\n                    <Route exact={true} path=\"/qualities\" render={() => <List renderItem={(item) => item} type=\"qualities\"/>}/>\r\n                </div>\r\n            </Router>\r\n        </MyContext.Provider>\r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from \"./components/app\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}